@model AgroVisitWeb.Models.IntervencaoViewModel

@{
    ViewBag.Title = "Editar Intervenção";
}

@{
    Layout = null;
}

<div class="modal-body">
    <form id="editIntervencaoForm" asp-action="Edit" asp-controller="Intervencao" method="post">
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Id)

        <!-- Campo oculto para o ProjetoId -->
        @Html.HiddenFor(model => model.IdProjeto)

        <div class="form-group">
            @Html.LabelFor(model => model.Pratica, new { @class = "control-label" })
            @Html.EditorFor(model => model.Pratica, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.Pratica, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, new { @class = "control-label" })
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataAplicacao, new { @class = "control-label" })
            @Html.EditorFor(model => model.DataAplicacao, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.DataAplicacao, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoProduto, new { @class = "control-label" })
            @Html.EditorFor(model => model.TipoProduto, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.TipoProduto, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label" })
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>

        <div class="modal-footer">
            <input type="submit" value="Concluir" class="btn btn-success borda-concluir" />
        </div>
    </form>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        $(document).on('submit', '#editIntervencaoForm', function (e) {
            e.preventDefault();
            var form = $(this);

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                if (response.success) {
                    var modal = bootstrap.Modal.getInstance(document.getElementById('editIntervencaoModal'));
                        modal.hide();

                        setTimeout(function() {
                            location.reload();
                        }, 500);
                } else {
                    $('.modal-body').html(response);
                }
                },
                error: function (xhr) {
                    alert('Erro ao salvar: ' + xhr.statusText);
                }
            });
        });

        $('#editIntervencaoModal').on('hidden.bs.modal', function () {
            $(this).find('form')[0].reset();
            $(this).find('.text-danger').text('');
        });
    });
</script>