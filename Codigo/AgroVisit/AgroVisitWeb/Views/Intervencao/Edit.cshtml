@model AgroVisitWeb.Models.IntervencaoViewModel

@{
    ViewBag.Title = "Editar Intervenção";
}

@{
    Layout = null;
}

<head>
    <link rel="stylesheet" href="~/css/flatpickr-custom.css">
</head>
<body>
    <div class="modal-body">
        <form id="editIntervencaoForm" asp-action="Edit" asp-controller="Intervencao" method="post">
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Id)

            <!-- Campo oculto para o ProjetoId -->
            @Html.HiddenFor(model => model.IdProjeto)

            <div class="form-group">
                @Html.LabelFor(model => model.Pratica, new { @class = "control-label" })<span class="text-danger">*</span>
                @Html.EditorFor(model => model.Pratica, new { htmlAttributes = new { @class = "form-control border border-success" } })
                @Html.ValidationMessageFor(model => model.Pratica, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descricao, new { @class = "control-label" })
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control border border-success" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataAplicacao, new { @class = "control-label" })<span class="text-danger">*</span>
                @Html.EditorFor(model => model.DataAplicacao, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control border border-success datetime-picker",
                            @data_date_format = "d/m/Y"
                        }
                    })
                @Html.ValidationMessageFor(model => model.DataAplicacao, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipoProduto, new { @class = "control-label" })
                @Html.EditorFor(model => model.TipoProduto, new { htmlAttributes = new { @class = "form-control border border-success" } })
                @Html.ValidationMessageFor(model => model.TipoProduto, "", new { @class = "text-danger" })
            </div>

            <br />
            <div class="form-group">
                <label asp-for="Status" class="control-label">Status da Intervenção: <span class="text-danger">*</span></label>

                <div class="d-flex flex-column flex-md-row">
                    <div class="form-check">
                        <input type="radio" id="agendado_radio" asp-for="Status" class="form-check-input" value="A" checked="@(Model.Status == "A")">
                        <label for="agendado_radio" class="form-check-label">Agendada</label>
                    </div>

                    <div class="form-check">
                        <input type="radio" id="execucao_radio" asp-for="Status" class="form-check-input" value="EX" checked="@(Model.Status == "EX")">
                        <label for="execucao_radio" class="form-check-label">Em Execução</label>
                    </div>

                    <div class="form-check">
                        <input type="radio" id="concluida_radio" asp-for="Status" class="form-check-input" value="C" checked="@(Model.Status == "C")">
                        <label for="concluida_radio" class="form-check-label">Concluída</label>
                    </div>
                </div>

                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="modal-footer">
                <input type="submit" value="Concluir" class="btn btn-success borda-concluir" />
            </div>
        </form>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script src="~/js/intervencaoJS.js"></script>
    }
    <script>
        flatpickr(".datetime-picker", {
            enableTime: true,
            dateFormat: "d/m/Y H:i",
            time_24hr: true,
            locale: "pt",
            defaultDate: "@(Model.DataAplicacao.Value.ToString("dd-MM-yyyy HH:mm"))"
        });
    </script>
</body>