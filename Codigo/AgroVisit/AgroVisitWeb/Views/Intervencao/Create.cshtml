@model AgroVisitWeb.Models.IntervencaoViewModel

@{
    ViewBag.Title = "Criar Intervenção";
}

<div class="modal-body">
    <form id="createIntervencaoForm" asp-action="Create" asp-controller="Intervencao" method="post">
        @Html.AntiForgeryToken()

        <!-- Campo oculto para o ProjetoId -->
        @Html.HiddenFor(model => model.IdProjeto)

        <div class="form-group">
            @Html.LabelFor(model => model.Pratica, new { @class = "control-label" })
            @Html.EditorFor(model => model.Pratica, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.Pratica, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, new { @class = "control-label" })
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataAplicacao, new { @class = "control-label" })
            @Html.EditorFor(model => model.DataAplicacao, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.DataAplicacao, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoProduto, new { @class = "control-label" })
            @Html.EditorFor(model => model.TipoProduto, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.TipoProduto, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label" })
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control border border-success" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>

        <div class="modal-footer">
            <input type="submit" value="Concluir" class="btn btn-success borda-concluir" />
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $("#salvarIntervencao").click(function (event) {
            event.preventDefault(); // Impede o comportamento padrão do botão

            var form = $("#createIntervencaoForm");

            $.ajax({
                url: form.attr("action"),
                type: "POST",
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        // Fecha o modal e recarrega a página
                        $("#intervencaoModal").modal("hide");
                        location.reload(); // Ou atualize apenas a parte necessária da página
                    } else {
                        // Atualiza o conteúdo do modal com os erros de validação
                        $(".modal-body").html(response);
                    }
                },
                error: function () {
                    alert("Erro ao salvar intervenção!");
                }
            });
        });
    });
</script>
