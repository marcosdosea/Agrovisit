@inject SignInManager<UsuarioIdentity> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="container p-5 text-center">
    <ul class="nav nav-pills flex-column">
        <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="border" asp-page="./Index">Perfil</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="border" asp-page="./Email">Email</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="border" asp-page="./ChangePassword">Senha</a></li>
        @if (hasExternalLogins)
        {
            <li id="border" class="nav-item"><a id="border" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">Autenticação externa</a></li>
        }
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="border" asp-page="./TwoFactorAuthentication">Autenticação de Dois Fatores</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="border" asp-page="./PersonalData">Dados Pessoais</a></li>
    </ul>
</div>